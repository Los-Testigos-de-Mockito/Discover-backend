

spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
#spring.datasource.url = jdbc:mysql://monorail.proxy.rlwy.net:15010/railway
#spring.datasource.username=root
#spring.datasource.password=TrzkpxvlnfMwcHZAbwQcCsOYRhzDtbVg
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.jpa.properties.hibernate.format_sql=true

#Copia esta parte si usas JWT para seguridad
jwt.secret.key=${JWT_SECRET}
jwt.time.expiration=3600000
#1 hora
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#Esto te permite definir el despliegue del backend en un puerto específico :)
server.port=8081

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=discover.application.web@gmail.com
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000





#spring.datasource.url=jdbc:mysql://viaduct.proxy.rlwy.net:47539/railway?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=root
#spring.datasource.password=rafIUDzbfpQawvyxChCLpHUxAcRPvXin
##spring.datasource.url = jdbc:mysql://monorail.proxy.rlwy.net:15010/railway
##spring.datasource.username=root
##spring.datasource.password=TrzkpxvlnfMwcHZAbwQcCsOYRhzDtbVg
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=update
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#
#spring.jpa.properties.hibernate.format_sql=true
#
##Copia esta parte si usas JWT para seguridad
#jwt.secret.key=94d858e54796d1b416f9c0a58af3d7935c11f6b402bf5e7e91825d93b95487d0
#jwt.time.expiration=3600000
##1 hora
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
##Esto te permite definir el despliegue del backend en un puerto específico
#server.port=8081
#
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=discover.application.web@gmail.com
#spring.mail.password=vvqj dbgt gdlh skov
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=3000
#spring.mail.properties.mail.smtp.writetimeout=5000

